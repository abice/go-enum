([]string) (len=88) {
  (string) (len=41) "// Code generated by go-enum DO NOT EDIT.",
  (string) (len=13) "// Version: -",
  (string) (len=14) "// Revision: -",
  (string) (len=16) "// Build Date: -",
  (string) (len=14) "// Built By: -",
  (string) "",
  (string) (len=17) "package generator",
  (string) "",
  (string) (len=8) "import (",
  (string) (len=6) "\t\"fmt\"",
  (string) (len=10) "\t\"strings\"",
  (string) (len=1) ")",
  (string) "",
  (string) (len=7) "const (",
  (string) (len=42) "\t// Create is a ChangeType of type Create.",
  (string) (len=25) "\tCreate ChangeType = iota",
  (string) (len=42) "\t// Update is a ChangeType of type Update.",
  (string) (len=7) "\tUpdate",
  (string) (len=42) "\t// Delete is a ChangeType of type Delete.",
  (string) (len=7) "\tDelete",
  (string) (len=1) ")",
  (string) "",
  (string) (len=44) "const _ChangeTypeName = \"CreateUpdateDelete\"",
  (string) "",
  (string) (len=43) "var _ChangeTypeMap = map[ChangeType]string{",
  (string) (len=30) "\tCreate: _ChangeTypeName[0:6],",
  (string) (len=31) "\tUpdate: _ChangeTypeName[6:12],",
  (string) (len=32) "\tDelete: _ChangeTypeName[12:18],",
  (string) (len=1) "}",
  (string) "",
  (string) (len=44) "// String implements the Stringer interface.",
  (string) (len=37) "func (x ChangeType) String() string {",
  (string) (len=38) "\tif str, ok := _ChangeTypeMap[x]; ok {",
  (string) (len=12) "\t\treturn str",
  (string) (len=2) "\t}",
  (string) (len=40) "\treturn fmt.Sprintf(\"ChangeType(%d)\", x)",
  (string) (len=1) "}",
  (string) "",
  (string) (len=45) "var _ChangeTypeValue = map[string]ChangeType{",
  (string) (len=49) "\t_ChangeTypeName[0:6]:                    Create,",
  (string) (len=49) "\tstrings.ToLower(_ChangeTypeName[0:6]):   Create,",
  (string) (len=49) "\t_ChangeTypeName[6:12]:                   Update,",
  (string) (len=49) "\tstrings.ToLower(_ChangeTypeName[6:12]):  Update,",
  (string) (len=49) "\t_ChangeTypeName[12:18]:                  Delete,",
  (string) (len=49) "\tstrings.ToLower(_ChangeTypeName[12:18]): Delete,",
  (string) (len=1) "}",
  (string) "",
  (string) (len=64) "// ParseChangeType attempts to convert a string to a ChangeType.",
  (string) (len=55) "func ParseChangeType(name string) (ChangeType, error) {",
  (string) (len=41) "\tif x, ok := _ChangeTypeValue[name]; ok {",
  (string) (len=15) "\t\treturn x, nil",
  (string) (len=2) "\t}",
  (string) (len=71) "\treturn ChangeType(0), fmt.Errorf(\"%s is not a valid ChangeType\", name)",
  (string) (len=1) "}",
  (string) "",
  (string) (len=53) "// MarshalText implements the text marshaller method.",
  (string) (len=51) "func (x ChangeType) MarshalText() ([]byte, error) {",
  (string) (len=31) "\treturn []byte(x.String()), nil",
  (string) (len=1) "}",
  (string) "",
  (string) (len=57) "// UnmarshalText implements the text unmarshaller method.",
  (string) (len=55) "func (x *ChangeType) UnmarshalText(text []byte) error {",
  (string) (len=21) "\tname := string(text)",
  (string) (len=34) "\ttmp, err := ParseChangeType(name)",
  (string) (len=16) "\tif err != nil {",
  (string) (len=12) "\t\treturn err",
  (string) (len=2) "\t}",
  (string) (len=9) "\t*x = tmp",
  (string) (len=11) "\treturn nil",
  (string) (len=1) "}",
  (string) "",
  (string) (len=55) "// Set implements the Golang flag.Value interface func.",
  (string) (len=44) "func (x *ChangeType) Set(val string) error {",
  (string) (len=31) "\tv, err := ParseChangeType(val)",
  (string) (len=7) "\t*x = v",
  (string) (len=11) "\treturn err",
  (string) (len=1) "}",
  (string) "",
  (string) (len=56) "// Get implements the Golang flag.Getter interface func.",
  (string) (len=40) "func (x *ChangeType) Get() interface{} {",
  (string) (len=10) "\treturn *x",
  (string) (len=1) "}",
  (string) "",
  (string) (len=62) "// Type implements the github.com/spf13/pFlag Value interface.",
  (string) (len=36) "func (x *ChangeType) Type() string {",
  (string) (len=20) "\treturn \"ChangeType\"",
  (string) (len=1) "}",
  (string) ""
}
