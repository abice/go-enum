// Code generated by go-enum DO NOT EDIT.
// Version: example
// Revision: example
// Build Date: example
// Built By: example

//go:build example
// +build example

package example

import (
	"errors"
	"fmt"
)

const (
	// SuffixGen is a Suffix of type gen.
	SuffixGen Suffix = "gen"
)

var ErrInvalidSuffix = errors.New("not a valid Suffix")

// String implements the Stringer interface.
func (x Suffix) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x Suffix) IsValid() bool {
	_, err := ParseSuffix(string(x))
	return err == nil
}

var _SuffixValue = map[string]Suffix{
	"gen": SuffixGen,
}

// ParseSuffix attempts to convert a string to a Suffix.
func ParseSuffix(name string) (Suffix, error) {
	if x, ok := _SuffixValue[name]; ok {
		return x, nil
	}
	return Suffix(""), fmt.Errorf("%s is %w", name, ErrInvalidSuffix)
}
